{
  "ajv@5.2.0": {
    "licenses": "MIT",
    "repository": "https://github.com/epoberezkin/ajv",
    "publisher": "Evgeny Poberezkin",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/ajv",
    "licenseFile": "node_modules/ajv/LICENSE",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Evgeny Poberezkin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "async@2.5.0": {
    "licenses": "MIT",
    "repository": "https://github.com/caolan/async",
    "publisher": "Caolan McMahon",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/async",
    "licenseFile": "node_modules/async/LICENSE",
    "licenseText": "Copyright (c) 2010-2017 Caolan McMahon\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "balanced-match@1.0.0": {
    "licenses": "MIT",
    "repository": "https://github.com/juliangruber/balanced-match",
    "publisher": "Julian Gruber",
    "email": "mail@juliangruber.com",
    "url": "http://juliangruber.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/balanced-match",
    "licenseFile": "node_modules/balanced-match/LICENSE.md",
    "licenseText": "(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "brace-expansion@1.1.8": {
    "licenses": "MIT",
    "repository": "https://github.com/juliangruber/brace-expansion",
    "publisher": "Julian Gruber",
    "email": "mail@juliangruber.com",
    "url": "http://juliangruber.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/brace-expansion",
    "licenseFile": "node_modules/brace-expansion/README.md",
    "licenseText": "# brace-expansion\n\n[Brace expansion](https://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html), \nas known from sh/bash, in JavaScript.\n\n[![build status](https://secure.travis-ci.org/juliangruber/brace-expansion.svg)](http://travis-ci.org/juliangruber/brace-expansion)\n[![downloads](https://img.shields.io/npm/dm/brace-expansion.svg)](https://www.npmjs.org/package/brace-expansion)\n[![Greenkeeper badge](https://badges.greenkeeper.io/juliangruber/brace-expansion.svg)](https://greenkeeper.io/)\n\n[![testling badge](https://ci.testling.com/juliangruber/brace-expansion.png)](https://ci.testling.com/juliangruber/brace-expansion)\n\n## Example\n\n```js\nvar expand = require('brace-expansion');\n\nexpand('file-{a,b,c}.jpg')\n// => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg']\n\nexpand('-v{,,}')\n// => ['-v', '-v', '-v']\n\nexpand('file{0..2}.jpg')\n// => ['file0.jpg', 'file1.jpg', 'file2.jpg']\n\nexpand('file-{a..c}.jpg')\n// => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg']\n\nexpand('file{2..0}.jpg')\n// => ['file2.jpg', 'file1.jpg', 'file0.jpg']\n\nexpand('file{0..4..2}.jpg')\n// => ['file0.jpg', 'file2.jpg', 'file4.jpg']\n\nexpand('file-{a..e..2}.jpg')\n// => ['file-a.jpg', 'file-c.jpg', 'file-e.jpg']\n\nexpand('file{00..10..5}.jpg')\n// => ['file00.jpg', 'file05.jpg', 'file10.jpg']\n\nexpand('{{A..C},{a..c}}')\n// => ['A', 'B', 'C', 'a', 'b', 'c']\n\nexpand('ppp{,config,oe{,conf}}')\n// => ['ppp', 'pppconfig', 'pppoe', 'pppoeconf']\n```\n\n## API\n\n```js\nvar expand = require('brace-expansion');\n```\n\n### var expanded = expand(str)\n\nReturn an array of all possible and valid expansions of `str`. If none are\nfound, `[str]` is returned.\n\nValid expansions are:\n\n```js\n/^(.*,)+(.+)?$/\n// {a,b,...}\n```\n\nA comma seperated list of options, like `{a,b}` or `{a,{b,c}}` or `{,a,}`.\n\n```js\n/^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/\n// {x..y[..incr]}\n```\n\nA numeric sequence from `x` to `y` inclusive, with optional increment.\nIf `x` or `y` start with a leading `0`, all the numbers will be padded\nto have equal length. Negative numbers and backwards iteration work too.\n\n```js\n/^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/\n// {x..y[..incr]}\n```\n\nAn alphabetic sequence from `x` to `y` inclusive, with optional increment.\n`x` and `y` must be exactly one character, and if given, `incr` must be a\nnumber.\n\nFor compatibility reasons, the string `${` is not eligible for brace expansion.\n\n## Installation\n\nWith [npm](https://npmjs.org) do:\n\n```bash\nnpm install brace-expansion\n```\n\n## Contributors\n\n- [Julian Gruber](https://github.com/juliangruber)\n- [Isaac Z. Schlueter](https://github.com/isaacs)\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "brace@0.10.0": {
    "licenses": "MIT",
    "repository": "https://github.com/thlorenz/brace",
    "publisher": "Thorsten Lorenz",
    "email": "thlorenz@gmx.de",
    "url": "http://thlorenz.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/brace",
    "licenseFile": "node_modules/brace/LICENSE",
    "licenseText": "Copyright 2013 Thorsten Lorenz. \nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE."
  },
  "cli-table@0.3.1": {
    "licenses": "MIT*",
    "repository": "https://github.com/Automattic/cli-table",
    "publisher": "Guillermo Rauch",
    "email": "guillermo@learnboost.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/cli-table",
    "licenseFile": "node_modules/cli-table/README.md",
    "licenseText": "CLI Table [![NPM Version](http://badge.fury.io/js/cli-table.svg)](http://badge.fury.io/js/cli-table) [![Build Status](https://secure.travis-ci.org/Automattic/cli-table.svg)](http://travis-ci.org/Automattic/cli-table)\n=========\n\nThis utility allows you to render unicode-aided tables on the command line from\nyour node.js scripts.\n\n![Screenshot](http://i.imgur.com/sYq4T.png)\n\n## Features\n\n- Customizable characters that constitute the table.\n- Color/background styling in the header through\n  [colors.js](http://github.com/marak/colors.js)\n- Column width customization\n- Text truncation based on predefined widths\n- Text alignment (left, right, center)\n- Padding (left, right)\n- Easy-to-use API\n\n## Installation\n\n```bash    \nnpm install cli-table\n```\n\n## How to use\n\n### Horizontal Tables\n```javascript\nvar Table = require('cli-table');\n\n// instantiate\nvar table = new Table({\n    head: ['TH 1 label', 'TH 2 label']\n  , colWidths: [100, 200]\n});\n\n// table is an Array, so you can `push`, `unshift`, `splice` and friends\ntable.push(\n    ['First value', 'Second value']\n  , ['First value', 'Second value']\n);\n\nconsole.log(table.toString());\n```\n\n### Vertical Tables\n```javascript\nvar Table = require('cli-table');\nvar table = new Table();\n\ntable.push(\n    { 'Some key': 'Some value' }\n  , { 'Another key': 'Another value' }\n);\n\nconsole.log(table.toString());\n```\n### Cross Tables\nCross tables are very similar to vertical tables, with two key differences:\n\n1. They require a `head` setting when instantiated that has an empty string as the first header\n2. The individual rows take the general form of { \"Header\": [\"Row\", \"Values\"] }\n\n```javascript\nvar Table = require('cli-table');\nvar table = new Table({ head: [\"\", \"Top Header 1\", \"Top Header 2\"] });\n\ntable.push(\n    { 'Left Header 1': ['Value Row 1 Col 1', 'Value Row 1 Col 2'] }\n  , { 'Left Header 2': ['Value Row 2 Col 1', 'Value Row 2 Col 2'] }\n);\n\nconsole.log(table.toString());\n```\n\n### Custom styles\nThe ```chars``` property controls how the table is drawn:\n```javascript\nvar table = new Table({\n  chars: { 'top': '═' , 'top-mid': '╤' , 'top-left': '╔' , 'top-right': '╗'\n         , 'bottom': '═' , 'bottom-mid': '╧' , 'bottom-left': '╚' , 'bottom-right': '╝'\n         , 'left': '║' , 'left-mid': '╟' , 'mid': '─' , 'mid-mid': '┼'\n         , 'right': '║' , 'right-mid': '╢' , 'middle': '│' }\n});\n\ntable.push(\n    ['foo', 'bar', 'baz']\n  , ['frob', 'bar', 'quuz']\n);\n\nconsole.log(table.toString());\n// Outputs:\n//\n//╔══════╤═════╤══════╗\n//║ foo  │ bar │ baz  ║\n//╟──────┼─────┼──────╢\n//║ frob │ bar │ quuz ║\n//╚══════╧═════╧══════╝\n```\n\nEmpty decoration lines will be skipped, to avoid vertical separator rows just\nset the 'mid', 'left-mid', 'mid-mid', 'right-mid' to the empty string:\n```javascript\nvar table = new Table({ chars: {'mid': '', 'left-mid': '', 'mid-mid': '', 'right-mid': ''} });\ntable.push(\n    ['foo', 'bar', 'baz']\n  , ['frobnicate', 'bar', 'quuz']\n);\n\nconsole.log(table.toString());\n// Outputs: (note the lack of the horizontal line between rows)\n//┌────────────┬─────┬──────┐\n//│ foo        │ bar │ baz  │\n//│ frobnicate │ bar │ quuz │\n//└────────────┴─────┴──────┘\n```\n\nBy setting all chars to empty with the exception of 'middle' being set to a\nsingle space and by setting padding to zero, it's possible to get the most\ncompact layout with no decorations:\n```javascript\nvar table = new Table({\n  chars: { 'top': '' , 'top-mid': '' , 'top-left': '' , 'top-right': ''\n         , 'bottom': '' , 'bottom-mid': '' , 'bottom-left': '' , 'bottom-right': ''\n         , 'left': '' , 'left-mid': '' , 'mid': '' , 'mid-mid': ''\n         , 'right': '' , 'right-mid': '' , 'middle': ' ' },\n  style: { 'padding-left': 0, 'padding-right': 0 }\n});\n\ntable.push(\n    ['foo', 'bar', 'baz']\n  , ['frobnicate', 'bar', 'quuz']\n);\n\nconsole.log(table.toString());\n// Outputs:\n//foo        bar baz\n//frobnicate bar quuz\n```\n\n## Running tests\n\nClone the repository with all its submodules and run:\n\n```bash\n$ make test\n```\n\n## Credits\n\n- Guillermo Rauch &lt;guillermo@learnboost.com&gt; ([Guille](http://github.com/guille))\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "co@4.6.0": {
    "licenses": "MIT",
    "repository": "https://github.com/tj/co",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/co",
    "licenseFile": "node_modules/co/LICENSE",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2014 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "colors@1.0.3": {
    "licenses": "MIT",
    "repository": "https://github.com/Marak/colors.js",
    "publisher": "Marak Squires",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/colors",
    "licenseFile": "node_modules/colors/ReadMe.md",
    "licenseText": "# colors.js\n\n## get color and style in your node.js console\n\n<img src=\"https://github.com/Marak/colors.js/raw/master/screenshots/colors.png\"/>\n\n## Installation\n\n    npm install colors\n\n## colors and styles!\n\n### text colors\n\n  - black\n  - red\n  - green\n  - yellow\n  - blue\n  - magenta\n  - cyan\n  - white\n  - gray\n  - grey\n\n### background colors\n\n\n\n  - bgBlack\n  - bgRed\n  - bgGreen\n  - bgYellow\n  - bgBlue\n  - bgMagenta\n  - bgCyan\n  - bgWhite\n\n### styles\n\n  - reset\n  - bold\n  - dim\n  - italic\n  - underline\n  - inverse\n  - hidden\n  - strikethrough\n\n### extras\n\n  - rainbow\n  - zebra\n  - america\n  - trap\n  - random\n\n\n## Usage\n\nBy popular demand, `colors` now ships with two types of usages!\n\nThe super nifty way\n\n```js\nvar colors = require('colors');\n\nconsole.log('hello'.green); // outputs green text\nconsole.log('i like cake and pies'.underline.red) // outputs red underlined text\nconsole.log('inverse the color'.inverse); // inverses the color\nconsole.log('OMG Rainbows!'.rainbow); // rainbow\nconsole.log('Run the trap'.trap); // Drops the bass\n\n```\n\nor a slightly less nifty way which doesn't extend `String.prototype`\n\n```js\nvar colors = require('colors/safe');\n\nconsole.log(colors.green('hello')); // outputs green text\nconsole.log(colors.red.underline('i like cake and pies')) // outputs red underlined text\nconsole.log(colors.inverse('inverse the color')); // inverses the color\nconsole.log(colors.rainbow('OMG Rainbows!')); // rainbow\nconsole.log(colors.trap('Run the trap')); // Drops the bass\n\n```\n\nI prefer the first way. Some people seem to be afraid of extending `String.prototype` and prefer the second way. \n\nIf you are writing good code you will never have an issue with the first approach. If you really don't want to touch `String.prototype`, the second usage will not touch `String` native object.\n\n## Disabling Colors\n\nTo disable colors you can pass the following arguments in the command line to your application:\n\n```bash\nnode myapp.js --no-color\n```\n\n## Console.log [string substitution](http://nodejs.org/docs/latest/api/console.html#console_console_log_data)\n\n```js\nvar name = 'Marak';\nconsole.log(colors.green('Hello %s'), name);\n// outputs -> 'Hello Marak'\n```\n\n## Custom themes\n\n### Using standard API\n\n```js\n\nvar colors = require('colors');\n\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red'\n});\n\n// outputs red text\nconsole.log(\"this is an error\".error);\n\n// outputs yellow text\nconsole.log(\"this is a warning\".warn);\n```\n\n### Using string safe API\n\n```js\nvar colors = require('colors/safe');\n\n// set single property\nvar error = colors.red;\nerror('this is red');\n\n// set theme\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red'\n});\n\n// outputs red text\nconsole.log(colors.error(\"this is an error\"));\n\n// outputs yellow text\nconsole.log(colors.warn(\"this is a warning\"));\n```\n\n*Protip: There is a secret undocumented style in `colors`. If you find the style you can summon him.*"
  },
  "commander@2.11.0": {
    "licenses": "MIT",
    "repository": "https://github.com/tj/commander.js",
    "publisher": "TJ Holowaychuk",
    "email": "tj@vision-media.ca",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/commander",
    "licenseFile": "node_modules/commander/LICENSE",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "concat-map@0.0.1": {
    "licenses": "MIT",
    "repository": "https://github.com/substack/node-concat-map",
    "publisher": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/concat-map",
    "licenseFile": "node_modules/concat-map/LICENSE",
    "licenseText": "This software is released under the MIT license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "dateformat@2.2.0": {
    "licenses": "MIT",
    "repository": "https://github.com/felixge/node-dateformat",
    "publisher": "Steven Levithan",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/dateformat",
    "licenseFile": "node_modules/dateformat/LICENSE",
    "licenseText": "(c) 2007-2009 Steven Levithan <stevenlevithan.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "debug@3.1.0": {
    "licenses": "MIT",
    "repository": "https://github.com/visionmedia/debug",
    "publisher": "TJ Holowaychuk",
    "email": "tj@vision-media.ca",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/debug",
    "licenseFile": "node_modules/debug/LICENSE",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2014 TJ Holowaychuk <tj@vision-media.ca>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software \nand associated documentation files (the 'Software'), to deal in the Software without restriction, \nincluding without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, \nand/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial \nportions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT \nLIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, \nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE \nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "electron-is-dev@0.1.2": {
    "licenses": "MIT",
    "repository": "https://github.com/sindresorhus/electron-is-dev",
    "publisher": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/electron-is-dev",
    "licenseFile": "node_modules/electron-is-dev/license",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "electron-json-storage@3.2.0": {
    "licenses": "MIT",
    "repository": "https://github.com/electron-userland/electron-json-storage",
    "publisher": "Juan Cruz Viotti",
    "email": "jv@jviotti.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/electron-json-storage",
    "licenseFile": "node_modules/electron-json-storage/README.md",
    "licenseText": "electron-json-storage\n=====================\n\n> Easily write and read user settings in Electron apps\n\n[![npm version](https://badge.fury.io/js/electron-json-storage.svg)](http://badge.fury.io/js/electron-json-storage)\n[![dependencies](https://david-dm.org/jviotti/electron-json-storage.svg)](https://david-dm.org/jviotti/electron-json-storage.svg)\n[![Build Status](https://travis-ci.org/electron-userland/electron-json-storage.svg?branch=master)](https://travis-ci.org/electron-userland/electron-json-storage)\n[![Build status](https://ci.appveyor.com/api/projects/status/ulwk1nnh7l8209xg/branch/master?svg=true)](https://ci.appveyor.com/project/electron-userland/electron-json-storage/branch/master)\n\n[Electron](http://electron.atom.io) lacks an easy way to persist and read user settings for your application. `electron-json-storage` implements an API somehow similar to [localStorage](https://developer.mozilla.org/en/docs/Web/API/Window/localStorage) to write and read JSON objects to/from the operating system application data directory, as defined by `app.getPath('userData')`.\n\nRelated modules:\n\n- [electron-settings](https://github.com/nathanbuchar/electron-settings)\n- [electron-store](https://github.com/sindresorhus/electron-store)\n- [electron-storage](https://github.com/Cocycles/electron-storage)\n\nInstallation\n------------\n\nInstall `electron-json-storage` by running:\n\n```sh\n$ npm install --save electron-json-storage\n```\n\nYou can require this module from either the **main** or **renderer** process (with and without `remote`).\n\nDocumentation\n-------------\n\n\n* [storage](#module_storage)\n    * [.DEFAULT_DATA_PATH](#module_storage.DEFAULT_DATA_PATH) : <code>String</code>\n    * [.setDataPath(directory)](#module_storage.setDataPath)\n    * [.getDataPath()](#module_storage.getDataPath) ⇒ <code>String</code>\n    * [.get(key, [options], callback)](#module_storage.get)\n    * [.getMany(keys, [options], callback)](#module_storage.getMany)\n    * [.getAll([options], callback)](#module_storage.getAll)\n    * [.set(key, json, [options], callback)](#module_storage.set)\n    * [.has(key, [options], callback)](#module_storage.has)\n    * [.keys([options], callback)](#module_storage.keys)\n    * [.remove(key, [options], callback)](#module_storage.remove)\n    * [.clear([options], callback)](#module_storage.clear)\n\n<a name=\"module_storage.DEFAULT_DATA_PATH\"></a>\n\n### storage.DEFAULT_DATA_PATH : <code>String</code>\n**Kind**: static constant of <code>[storage](#module_storage)</code>  \n**Summary**: The default data path  \n<a name=\"module_storage.setDataPath\"></a>\n\n### storage.setDataPath(directory)\nThe default data path is stored in `storage.DEFAULT_DATA_PATH`.\n\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Set current data path  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| directory | <code>String</code> | directory |\n\n**Example**  \n```js\nconst os = require('os');\nconst storage = require('electron-json-storage');\n\nstorage.setDataPath(os.tmpdir());\n```\n<a name=\"module_storage.getDataPath\"></a>\n\n### storage.getDataPath() ⇒ <code>String</code>\nReturns the current data path. It defaults to a directory called\n\"storage\" inside Electron's `userData` path.\n\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Get current user data path  \n**Returns**: <code>String</code> - the user data path  \n**Access:** public  \n**Example**  \n```js\nconst storage = require('electron-json-storage');\n\nconst dataPath = storage.getDataPath();\nconsole.log(dataPath);\n```\n<a name=\"module_storage.get\"></a>\n\n### storage.get(key, [options], callback)\nIf the key doesn't exist in the user data, an empty object is returned.\nAlso notice that the `.json` extension is added automatically, but it's\nignored if you pass it yourself.\n\nPassing an extension other than `.json` will result in a file created\nwith both extensions. For example, the key `foo.data` will result in a file\ncalled `foo.data.json`.\n\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Read user data  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| key | <code>String</code> | key |\n| [options] | <code>Object</code> | options |\n| [options.dataPath] | <code>String</code> | data path |\n| callback | <code>function</code> | callback (error, data) |\n\n**Example**  \n```js\nconst storage = require('electron-json-storage');\n\nstorage.get('foobar', function(error, data) {\n  if (error) throw error;\n\n  console.log(data);\n});\n```\n<a name=\"module_storage.getMany\"></a>\n\n### storage.getMany(keys, [options], callback)\nThis function returns an object with the data of all the passed keys.\nIf one of the keys doesn't exist, an empty object is returned for it.\n\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Read many user data keys  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| keys | <code>Array.&lt;String&gt;</code> | keys |\n| [options] | <code>Object</code> | options |\n| [options.dataPath] | <code>String</code> | data path |\n| callback | <code>function</code> | callback (error, data) |\n\n**Example**  \n```js\nconst storage = require('electron-json-storage');\n\nstorage.getMany([ 'foobar', 'barbaz' ], function(error, data) {\n  if (error) throw error;\n\n  console.log(data.foobar);\n  console.log(data.barbaz);\n});\n```\n<a name=\"module_storage.getAll\"></a>\n\n### storage.getAll([options], callback)\nThis function returns an empty object if there is no data to be read.\n\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Read all user data  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| [options] | <code>Object</code> | options |\n| [options.dataPath] | <code>String</code> | data path |\n| callback | <code>function</code> | callback (error, data) |\n\n**Example**  \n```js\nconst storage = require('electron-json-storage');\n\nstorage.getAll(function(error, data) {\n  if (error) throw error;\n\n  console.log(data);\n});\n```\n<a name=\"module_storage.set\"></a>\n\n### storage.set(key, json, [options], callback)\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Write user data  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| key | <code>String</code> | key |\n| json | <code>Object</code> | json object |\n| [options] | <code>Object</code> | options |\n| [options.dataPath] | <code>String</code> | data path |\n| callback | <code>function</code> | callback (error) |\n\n**Example**  \n```js\nconst storage = require('electron-json-storage');\n\nstorage.set('foobar', { foo: 'bar' }, function(error) {\n  if (error) throw error;\n});\n```\n<a name=\"module_storage.has\"></a>\n\n### storage.has(key, [options], callback)\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Check if a key exists  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| key | <code>String</code> | key |\n| [options] | <code>Object</code> | options |\n| [options.dataPath] | <code>String</code> | data path |\n| callback | <code>function</code> | callback (error, hasKey) |\n\n**Example**  \n```js\nconst storage = require('electron-json-storage');\n\nstorage.has('foobar', function(error, hasKey) {\n  if (error) throw error;\n\n  if (hasKey) {\n    console.log('There is data stored as `foobar`');\n  }\n});\n```\n<a name=\"module_storage.keys\"></a>\n\n### storage.keys([options], callback)\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Get the list of saved keys  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| [options] | <code>Object</code> | options |\n| [options.dataPath] | <code>String</code> | data path |\n| callback | <code>function</code> | callback (error, keys) |\n\n**Example**  \n```js\nconst storage = require('electron-json-storage');\n\nstorage.keys(function(error, keys) {\n  if (error) throw error;\n\n  for (var key of keys) {\n    console.log('There is a key called: ' + key);\n  }\n});\n```\n<a name=\"module_storage.remove\"></a>\n\n### storage.remove(key, [options], callback)\nNotice this function does nothing, nor throws any error\nif the key doesn't exist.\n\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Remove a key  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| key | <code>String</code> | key |\n| [options] | <code>Object</code> | options |\n| [options.dataPath] | <code>String</code> | data path |\n| callback | <code>function</code> | callback (error) |\n\n**Example**  \n```js\nconst storage = require('electron-json-storage');\n\nstorage.remove('foobar', function(error) {\n  if (error) throw error;\n});\n```\n<a name=\"module_storage.clear\"></a>\n\n### storage.clear([options], callback)\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Clear all stored data in the current user data path  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| [options] | <code>Object</code> | options |\n| [options.dataPath] | <code>String</code> | data path |\n| callback | <code>function</code> | callback (error) |\n\n**Example**  \n```js\nconst storage = require('electron-json-storage');\n\nstorage.clear(function(error) {\n  if (error) throw error;\n});\n```\n\nSupport\n-------\n\nIf you're having any problem, please [raise an issue](https://github.com/electron-userland/electron-json-storage/issues/new) on GitHub and we'll be happy to help.\n\nTests\n-----\n\nRun the test suite by doing:\n\n```sh\n$ npm test\n```\n\nContribute\n----------\n\n- Issue Tracker: [github.com/electron-userland/electron-json-storage/issues](https://github.com/electron-userland/electron-json-storage/issues)\n- Source Code: [github.com/electron-userland/electron-json-storage](https://github.com/electron-userland/electron-json-storage)\n\nBefore submitting a PR, please make sure that you include tests, and that [jshint](http://jshint.com) runs without any warning:\n\n```sh\n$ npm run-script lint\n```\n\nLicense\n-------\n\nThe project is licensed under the MIT license."
  },
  "electrongui@0.5.11": {
    "licenses": "MIT",
    "repository": "https://github.com/gherardovarando/electrongui",
    "publisher": "Gherardo Varando",
    "email": "gherardo.varando@gmail.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/electrongui",
    "licenseFile": "node_modules/electrongui/LICENSE",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Gherardo Varando (gherardo.varando@gmail.com), Mario Juez (mjuez@fi.upm.es)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "fast-deep-equal@0.1.0": {
    "licenses": "MIT",
    "repository": "https://github.com/epoberezkin/fast-deep-equal",
    "publisher": "Evgeny Poberezkin",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/fast-deep-equal",
    "licenseFile": "node_modules/fast-deep-equal/LICENSE",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Evgeny Poberezkin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "flat@4.0.0": {
    "licenses": "BSD-3-Clause",
    "repository": "https://github.com/hughsk/flat",
    "publisher": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughskennedy.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/flat",
    "licenseFile": "node_modules/flat/LICENSE",
    "licenseText": "Copyright (c) 2014, Hugh Kennedy\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the  nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  "fs.realpath@1.0.0": {
    "licenses": "ISC",
    "repository": "https://github.com/isaacs/fs.realpath",
    "publisher": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/fs.realpath",
    "licenseFile": "node_modules/fs.realpath/LICENSE",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n----\n\nThis library bundles a version of the `fs.realpath` and `fs.realpathSync`\nmethods from Node.js v0.10 under the terms of the Node.js MIT license.\n\nNode's license follows, also included at the header of `old.js` which contains\nthe licensed code:\n\n  Copyright Joyent, Inc. and other Node contributors.\n\n  Permission is hereby granted, free of charge, to any person obtaining a\n  copy of this software and associated documentation files (the \"Software\"),\n  to deal in the Software without restriction, including without limitation\n  the rights to use, copy, modify, merge, publish, distribute, sublicense,\n  and/or sell copies of the Software, and to permit persons to whom the\n  Software is furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n  DEALINGS IN THE SOFTWARE."
  },
  "glob@7.1.2": {
    "licenses": "ISC",
    "repository": "https://github.com/isaacs/node-glob",
    "publisher": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/glob",
    "licenseFile": "node_modules/glob/LICENSE",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."
  },
  "image-size@0.6.1": {
    "licenses": "MIT",
    "repository": "https://github.com/image-size/image-size",
    "publisher": "netroy",
    "email": "aditya@netroy.in",
    "url": "http://netroy.in/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/image-size",
    "licenseFile": "node_modules/image-size/LICENSE",
    "licenseText": "The MIT License (MIT)\n\nCopyright © 2017 Aditya Yadav, http://netroy.in\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "inflight@1.0.6": {
    "licenses": "ISC",
    "repository": "https://github.com/npm/inflight",
    "publisher": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/inflight",
    "licenseFile": "node_modules/inflight/LICENSE",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."
  },
  "inherits@2.0.3": {
    "licenses": "ISC",
    "repository": "https://github.com/isaacs/inherits",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/inherits",
    "licenseFile": "node_modules/inherits/LICENSE",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE."
  },
  "is-buffer@1.1.6": {
    "licenses": "MIT",
    "repository": "https://github.com/feross/is-buffer",
    "publisher": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/is-buffer",
    "licenseFile": "node_modules/is-buffer/LICENSE",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Feross Aboukhadijeh\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "javascript-natural-sort@0.7.1": {
    "licenses": "MIT",
    "repository": "https://github.com/Bill4Time/javascript-natural-sort",
    "publisher": "Jim Palmer",
    "url": "based on chunking idea from Dave Koelle, packaged by @khous of Bill4Time",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/javascript-natural-sort",
    "licenseFile": "node_modules/javascript-natural-sort/README.md",
    "licenseText": "### Simple numerics\r\n\r\n```javascript\r\n>>> ['10',9,2,'1','4'].sort(naturalSort)\r\n['1',2,'4',9,'10']\r\n```\r\n\r\n### Floats\r\n\r\n```javascript\r\n>>> ['10.0401',10.022,10.042,'10.021999'].sort(naturalSort)\r\n['10.021999',10.022,'10.0401',10.042]\r\n```\r\n\r\n### Float & decimal notation\r\n\r\n```javascript\r\n>>> ['10.04f','10.039F','10.038d','10.037D'].sort(naturalSort)\r\n['10.037D','10.038d','10.039F','10.04f']\r\n```\r\n\r\n### Scientific notation\r\n\r\n```javascript\r\n>>> ['1.528535047e5','1.528535047e7','1.528535047e3'].sort(naturalSort)\r\n['1.528535047e3','1.528535047e5','1.528535047e7']\r\n```\r\n\r\n### IP addresses\r\n\r\n```javascript\r\n>>> ['192.168.0.100','192.168.0.1','192.168.1.1'].sort(naturalSort)\r\n['192.168.0.1','192.168.0.100','192.168.1.1']\r\n```\r\n\r\n### Filenames\r\n\r\n```javascript\r\n>>> ['car.mov','01alpha.sgi','001alpha.sgi','my.string_41299.tif'].sort(naturalSort)\r\n['001alpha.sgi','01alpha.sgi','car.mov','my.string_41299.tif'\r\n```\r\n\r\n### Dates\r\n\r\n```javascript\r\n>>> ['10/12/2008','10/11/2008','10/11/2007','10/12/2007'].sort(naturalSort)\r\n['10/11/2007', '10/12/2007', '10/11/2008', '10/12/2008']\r\n```\r\n\r\n### Money\r\n\r\n```javascript\r\n>>> ['$10002.00','$10001.02','$10001.01'].sort(naturalSort)\r\n['$10001.01','$10001.02','$10002.00']\r\n```\r\n\r\n### Movie Titles\r\n\r\n```javascript\r\n>>> ['1 Title - The Big Lebowski','1 Title - Gattaca','1 Title - Last Picture Show'].sort(naturalSort)\r\n['1 Title - Gattaca','1 Title - Last Picture Show','1 Title - The Big Lebowski']\r\n```\r\n\r\n### By default - case-sensitive sorting\r\n\r\n```javascript\r\n>>> ['a', 'B'].sort(naturalSort);\r\n['B', 'a']\r\n```\r\n\r\n### To enable case-insensitive sorting\r\n```javascript\r\n>>> naturalSort.insensitive = true;\r\n>>> ['a', 'B'].sort(naturalSort);\r\n['a', 'B']\r\n```"
  },
  "json-schema-traverse@0.3.1": {
    "licenses": "MIT",
    "repository": "https://github.com/epoberezkin/json-schema-traverse",
    "publisher": "Evgeny Poberezkin",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/json-schema-traverse",
    "licenseFile": "node_modules/json-schema-traverse/LICENSE",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Evgeny Poberezkin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "json-stable-stringify@1.0.1": {
    "licenses": "MIT",
    "repository": "https://github.com/substack/json-stable-stringify",
    "publisher": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/json-stable-stringify",
    "licenseFile": "node_modules/json-stable-stringify/LICENSE",
    "licenseText": "This software is released under the MIT license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "json2csv@3.11.5": {
    "licenses": "MIT",
    "repository": "https://github.com/zemirco/json2csv",
    "publisher": "Mirco Zeiss",
    "email": "mirco.zeiss@gmail.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/json2csv",
    "licenseFile": "node_modules/json2csv/LICENSE.md",
    "licenseText": "Copyright (C) 2012 [Mirco Zeiss](mailto: mirco.zeiss@gmail.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\nto permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "jsoneditor@5.9.6": {
    "licenses": "Apache-2.0",
    "repository": "https://github.com/josdejong/jsoneditor",
    "publisher": "Jos de Jong",
    "email": "wjosdejong@gmail.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/jsoneditor",
    "licenseFile": "node_modules/jsoneditor/LICENSE",
    "licenseText": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS",
    "noticeFile": "node_modules/jsoneditor/NOTICE"
  },
  "jsonify@0.0.0": {
    "licenses": "Public Domain",
    "repository": "https://github.com/substack/jsonify",
    "publisher": "Douglas Crockford",
    "url": "http://crockford.com/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/jsonify",
    "licenseFile": "node_modules/jsonify/README.markdown",
    "licenseText": "jsonify\n=======\n\nThis module provides Douglas Crockford's JSON implementation without modifying\nany globals.\n\n`stringify` and `parse` are merely exported without respect to whether or not a\nglobal `JSON` object exists.\n\nmethods\n=======\n\nvar json = require('jsonify');\n\njson.parse(source, reviver)\n---------------------------\n\nReturn a new javascript object from a parse of the `source` string.\n\nIf a `reviver` function is specified, walk the structure passing each name/value\npair to `reviver.call(parent, key, value)` to transform the `value` before\nparsing it.\n\njson.stringify(value, replacer, space)\n--------------------------------------\n\nReturn a string representation for `value`.\n\nIf `replacer` is specified, walk the structure passing each name/value pair to\n`replacer.call(parent, key, value)` to transform the `value` before stringifying\nit.\n\nIf `space` is a number, indent the result by that many spaces.\nIf `space` is a string, use `space` as the indentation."
  },
  "leaflet-csvtiles@0.0.2": {
    "licenses": "MIT",
    "repository": "https://github.com/gherardovarando/leaflet-csvtiles",
    "publisher": "gherardo varando",
    "email": "gherardo.varando@gmail.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/leaflet-csvtiles",
    "licenseFile": "node_modules/leaflet-csvtiles/LICENSE",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Gherardo Varando (gherardo.varando@gmail.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "leaflet-draw@0.3.2": {
    "licenses": "MIT",
    "repository": "https://github.com/Leaflet/Leaflet.draw",
    "publisher": "Jacob Toye",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/leaflet-snap/node_modules/leaflet-draw",
    "licenseFile": "node_modules/leaflet-snap/node_modules/leaflet-draw/README.md",
    "licenseText": "[![Build Status](https://travis-ci.org/Leaflet/Leaflet.draw.svg?branch=master)](https://travis-ci.org/Leaflet/Leaflet.draw)\n\n Leaflet.draw: [![Join the chat at https://gitter.im/Leaflet/Leaflet.draw](https://badges.gitter.im/Leaflet/Leaflet.draw.svg)](https://gitter.im/Leaflet/Leaflet.draw?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n Leaflet: [![Gitter](https://badges.gitter.im/Leaflet/Leaflet.svg)](https://gitter.im/Leaflet/Leaflet?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n# Important\nLeaflet.draw 0.2.3+ requires [Leaflet 0.7.x](https://github.com/Leaflet/Leaflet/releases).\n\nSupport for Leaflet 1.0 is in development at the [leaflet-master](https://github.com/Leaflet/Leaflet.draw/tree/leaflet-master) branch.\n\n# Leaflet.draw\nAdds support for drawing and editing vectors and markers on [Leaflet maps](https://github.com/Leaflet/Leaflet). Check out the [demo](http://leaflet.github.com/Leaflet.draw/).\n\n#### Upgrading from Leaflet.draw 0.1\n\nLeaflet.draw 0.2.0 changes a LOT of things from 0.1. Please see [BREAKING CHANGES](https://github.com/Leaflet/Leaflet.draw/blob/master/BREAKINGCHANGES.md) for how to upgrade.\n\n## Table of Contents\n[Install](#install)  \n[Using the plugin](#using)  \n[Advanced Options](#options)  \n[Common tasks](#commontasks)  \n[Thanks](#thanks)\n\n<a name=\"install\" />\n## Install\n\nTo install the plugin run `npm install leaflet-draw` via command line in your project. You must also require this in your project like so: `var leaflet-draw = require('leaflet-draw');`\n\n<a name=\"using\" />\n## Using the plugin\n\nThe default state for the control is the draw toolbar just below the zoom control. This will allow map users to draw vectors and markers. **Please note the edit toolbar is not enabled by default.**\n\nTo add the draw toolbar set the option `drawControl: true` in the map options.\n\n````js\n// create a map in the \"map\" div, set the view to a given place and zoom\nvar map = L.map('map', {drawControl: true}).setView([51.505, -0.09], 13);\n\n// add an OpenStreetMap tile layer\nL.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n}).addTo(map);\n````\n\n### Adding the edit toolbar\n\nTo use the edit toolbar you must initialise the Leaflet.draw control and manually add it to the map.\n\n````js\n// create a map in the \"map\" div, set the view to a given place and zoom\nvar map = L.map('map').setView([51.505, -0.09], 13);\n\n// add an OpenStreetMap tile layer\nL.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n}).addTo(map);\n\n// Initialise the FeatureGroup to store editable layers\nvar drawnItems = new L.FeatureGroup();\nmap.addLayer(drawnItems);\n\n// Initialise the draw control and pass it the FeatureGroup of editable layers\nvar drawControl = new L.Control.Draw({\n\tedit: {\n\t\tfeatureGroup: drawnItems\n\t}\n});\nmap.addControl(drawControl);\n````\n\nThe key here is the `featureGroup` option. This tells the plugin which `FeatureGroup` contains the layers that should be editable.  The featureGroup can contain 0 or more features with geometry types `Point`, `LineString`, and `Polygon`.  **Leaflet.draw does not work with multigeometry features such as `MultiPoint`, `MultiLineString`, `MultiPolygon`, or `GeometryCollection`.**  If you need to add multigeometry features to the draw plugin, convert them to a FeatureCollection of non-multigeometries (`Point`s, `LineString`s, or `Polygon`s).\n\n### Events\n\nOnce you have successfully added the Leaflet.draw plugin to your map you will want to respond to the different actions users can initiate. The following events will be triggered on the map:\n\n#### draw:created\n\n| Property | Type | Description\n| --- | --- | ---\n| layer | [Polyline](http://leafletjs.com/reference.html#polyline)/[Polygon](http://leafletjs.com/reference.html#polygon)/[Rectangle](http://leafletjs.com/reference.html#rectangle)/[Circle](http://leafletjs.com/reference.html#circle)/[Marker](http://leafletjs.com/reference.html#marker) | Layer that was just created.\n| layerType | String | The type of layer this is. One of: `polyline`, `polygon`, `rectangle`, `circle`, `marker`\n\n\nTriggered when a new vector or marker has been created.\n\n````js\nmap.on('draw:created', function (e) {\n\tvar type = e.layerType,\n\t\tlayer = e.layer;\n\n\tif (type === 'marker') {\n\t\t// Do marker specific actions\n\t}\n\n\t// Do whatever else you need to. (save to db, add to map etc)\n\tmap.addLayer(layer);\n});\n````\n\n#### draw:edited\n\n| Property | Type | Description\n| --- | --- | ---\n| layers | [LayerGroup](http://leafletjs.com/reference.html#layergroup) | List of all layers just edited on the map.\n\nTriggered when layers in the FeatureGroup, initialised with the plugin, have been edited and saved.\n\n````js\nmap.on('draw:edited', function (e) {\n\tvar layers = e.layers;\n\tlayers.eachLayer(function (layer) {\n\t\t//do whatever you want, most likely save back to db\n\t});\n});\n````\n\n#### draw:deleted\n\nTriggered when layers have been removed (and saved) from the FeatureGroup.\n\n| Property | Type | Description\n| --- | --- | ---\n| layers | [LayerGroup](http://leafletjs.com/reference.html#layergroup) | List of all layers just removed from the map.\n\n#### draw:drawstart\n\nTriggered when the user has chosen to draw a particular vector or marker.\n\n| Property | Type | Description\n| --- | --- | ---\n| layerType | String | The type of layer this is. One of: `polyline`, `polygon`, `rectangle`, `circle`, `marker`\n\n#### draw:drawstop\n\nTriggered when the user has finished a particular vector or marker.\n\n| Property | Type | Description\n| --- | --- | ---\n| layerType | String | The type of layer this is. One of: `polyline`, `polygon`, `rectangle`, `circle`, `marker`\n\n#### draw:drawvertex\n\nTriggered when a vertex is created on a polyline or polygon.\n\n| Property | Type | Description\n| --- | --- | ---\n| layers | [LayerGroup](http://leafletjs.com/reference.html#layergroup) | List of all layers just being added from the map.\n\n#### draw:editstart\n\nTriggered when the user starts edit mode by clicking the edit tool button.\n\n| Property | Type | Description\n| --- | --- | ---\n| handler | String | The type of edit this is. One of: `edit`\n\n#### draw:editmove\n\nTriggered as the user moves a rectangle, circle or marker.\n\n| Property | Type | Description\n| --- | --- | ---\n| layer | [ILayer](http://leafletjs.com/reference.html#ilayer) | Layer that was just moved.\n\n#### draw:editresize\n\nTriggered as the user resizes a rectangle or circle.\n\n| Property | Type | Description\n| --- | --- | ---\n| layer | [ILayer](http://leafletjs.com/reference.html#ilayer) | Layer that was just moved.\n\n#### draw:editvertex\n\nTriggered when a vertex is edited on a polyline or polygon.\n\n| Property | Type | Description\n| --- | --- | ---\n| layers | [LayerGroup](http://leafletjs.com/reference.html#layergroup) | List of all layers just being edited from the map.\n\n#### draw:editstop\n\nTriggered when the user has finshed editing (edit mode) and saves edits.\n\n| Property | Type | Description\n| --- | --- | ---\n| handler | String | The type of edit this is. One of: `edit`\n\n#### draw:deletestart\n\nTriggered when the user starts remove mode by clicking the remove tool button.\n\n| Property | Type | Description\n| --- | --- | ---\n| handler | String | The type of edit this is. One of: `remove`\n\n#### draw:deletestop\n\nTriggered when the user has finished removing shapes (remove mode) and saves.\n\n| Property | Type | Description\n| --- | --- | ---\n| handler | String | The type of edit this is. One of: `remove`\n\n<a name=\"options\" />\n## Advanced options\n\nYou can configure the plugin by using the different options listed here.\n\n### Control.Draw\n\nThese options make up the root object that is used when initialising the Leaflet.draw control.\n\n| Option | Type | Default | Description\n| --- | --- | --- | ---\n| position | String | `'topleft'` | The initial position of the control (one of the map corners). See [control positions](http://leafletjs.com/reference.html#control-positions).\n| draw | [DrawOptions](#drawoptions) | `{}` | The options used to configure the draw toolbar.\n| edit | [EditOptions](#editoptions) | `false` | The options used to configure the edit toolbar.\n\n<a name=\"drawoptions\" />\n### DrawOptions\n\nThese options will allow you to configure the draw toolbar and its handlers.\n\n| Option | Type | Default | Description\n| --- | --- | --- | ---\n| polyline | [PolylineOptions](#polylineoptions) | `{ }` | Polyline draw handler options. Set to `false` to disable handler.\n| polygon | [PolygonOptions](#polygonoptions) | `{ }` | Polygon draw handler options. Set to `false` to disable handler.\n| rectangle | [RectangleOptions](#rectangleoptions) | `{ }` | Rectangle draw handler options. Set to `false` to disable handler.\n| circle | [CircleOptions](#circleoptions) | `{ }` | Circle draw handler options. Set to `false` to disable handler.\n| marker | [MarkerOptions](#markeroptions) | `{ }` | Marker draw handler options. Set to `false` to disable handler.\n\n### Draw handler options\n\nThe following options will allow you to configure the individual draw handlers.\n\n<a name=\"polylineoptions\" />\n#### PolylineOptions\n\nPolyline and Polygon drawing handlers take the same options.\n\n| Option | Type | Default | Description\n| --- | --- | --- | ---\n| allowIntersection | Bool | `true` | Determines if line segments can cross.\n| drawError | Object | [See code](https://github.com/Leaflet/Leaflet.draw/blob/master/src/draw/handler/Draw.Polyline.js#L10) | Configuration options for the error that displays if an intersection is detected.\n| guidelineDistance | Number | `20` | Distance in pixels between each guide dash.\n| shapeOptions | [Leaflet Polyline options](http://leafletjs.com/reference.html#polyline-options) | [See code](https://github.com/Leaflet/Leaflet.draw/blob/master/src/draw/handler/Draw.Polyline.js#L20) | The options used when drawing the polyline/polygon on the map.\n| metric | Bool | `true` | Determines which measurement system (metric or imperial) is used.\n| zIndexOffset | Number | `2000` | This should be a high number to ensure that you can draw over all other layers on the map.\n| repeatMode | Bool | `false` | Determines if the draw tool remains enabled after drawing a shape.\n\n<a name=\"polygonoptions\" />\n#### PolygonOptions\n\nPolygon options include all of the Polyline options plus the option to show the approximate area.\n\n| Option | Type | Default | Description\n| --- | --- | --- | ---\n| showArea | Bool | `false` | Show the area of the drawn polygon in m², ha or km². **The area is only approximate and become less accurate the larger the polygon is.**\n\n<a name=\"rectangleoptions\" />\n#### RectangleOptions\n\n| Option | Type | Default | Description\n| --- | --- | --- | ---\n| shapeOptions | [Leaflet Path options](http://leafletjs.com/reference.html#path-options) | [See code](https://github.com/Leaflet/Leaflet.draw/blob/master/src/draw/handler/Draw.Rectangle.js#L7) | The options used when drawing the rectangle on the map.\n| repeatMode | Bool | `false` | Determines if the draw tool remains enabled after drawing a shape.\n\n<a name=\"circleoptions\" />\n#### CircleOptions\n\n| Option | Type | Default | Description\n| --- | --- | --- | ---\n| shapeOptions | [Leaflet Path options](http://leafletjs.com/reference.html#path-options) | [See code](https://github.com/Leaflet/Leaflet.draw/blob/master/src/draw/handler/Draw.Circle.js#L7) | The options used when drawing the circle on the map.\n| repeatMode | Bool | `false` | Determines if the draw tool remains enabled after drawing a shape.\n\n<a name=\"markeroptions\" />\n#### MarkerOptions\n\n| Option | Type | Default | Description\n| --- | --- | --- | ---\n| icon | [Leaflet Icon](http://leafletjs.com/reference.html#icon) | `L.Icon.Default()` | The icon displayed when drawing a marker.\n| zIndexOffset | Number | `2000` | This should be a high number to ensure that you can draw over all other layers on the map.\n| repeatMode | Bool | `false` | Determines if the draw tool remains enabled after drawing a shape.\n\n<a name=\"editpolyoptions\" />\n### EditPolyOptions\n\nThese options will allow you to configure the draw toolbar and its handlers.\n\n| Option | Type | Default | Description\n| --- | --- | --- | ---\n| featureGroup | [Leaflet FeatureGroup](http://leafletjs.com/reference.html#featuregroup) | `null` | This is the FeatureGroup that stores all editable shapes. **THIS IS REQUIRED FOR THE EDIT TOOLBAR TO WORK**\n| edit | [EditHandlerOptions](#edithandleroptions) | `{ }` | Edit handler options. Set to `false` to disable handler.\n| remove | [DeleteHandlerOptions](#deletehandleroptions) | `{ }` | Delete handler options. Set to `false` to disable handler.\n| poly | [EditPolyOptions](#editpoly) |  `{ }` | Set polygon editing options\n\n<a name=\"edithandleroptions\" />\n#### EditHandlerOptions\n\n| Option | Type | Default | Description\n| --- | --- | --- | ---\n| selectedPathOptions | [Leaflet Path options](http://leafletjs.com/reference.html#path-options) | [See code](https://github.com/Leaflet/Leaflet.draw/blob/master/src/edit/handler/EditToolbar.Edit.js#L9) | The path options for how the layers will look while in edit mode. If this is set to null the editable path options will not be set.\n\n**Note:** To maintain the original layer color of the layer use `maintainColor: true` within `selectedPathOptions`.\n\nE.g. The edit options below will maintain the layer color and set the edit opacity to 0.3.\n\n````js\n{\n\tselectedPathOptions: {\n\t\tmaintainColor: true,\n\t\topacity: 0.3\n\t}\n}\n````\n\n<a name=\"deletehandleroptions\" />\n#### DeleteHandlerOptions\n\n| Option | Type | Default | Description\n| --- | --- | --- | ---\n\n\n<a name=\"editpoly\" />\n#### EditPolyOptions\n\n| Option | Type | Default | Description\n| --- | --- | --- | ---\n| allowIntersection | Bool | `true` |  Determines if line segments can cross.\n\n\n<a name=\"drawlocal\" />\n#### Customizing language and text in Leaflet.draw\n\nLeaflet.draw uses the `L.drawLocal` configuration object to set any text used in the plugin. Customizing this will allow support for changing the text or supporting another language.\n\nSee [Leaflet.draw.js](https://github.com/Leaflet/Leaflet.draw/blob/master/src/Leaflet.draw.js) for the default strings.\n\nE.g.\n\n````js\n// Set the button title text for the polygon button\nL.drawLocal.draw.toolbar.buttons.polygon = 'Draw a sexy polygon!';\n\n// Set the tooltip start text for the rectangle\nL.drawLocal.draw.handlers.rectangle.tooltip.start = 'Not telling...';\n````\n\n<a name=\"commontasks\" />\n## Common tasks\n\nThe following examples outline some common tasks.\n\n### Example Leaflet.draw config\n\nThe following example will show you how to:\n\n1. Change the position of the control's toolbar.\n2. Customize the styles of a vector layer.\n3. Use a custom marker.\n4. Disable the delete functionality.\n\n````js\nvar cloudmadeUrl = 'http://{s}.tile.cloudmade.com/BC9A493B41014CAABB98F0471D759707/997/256/{z}/{x}/{y}.png',\n\tcloudmade = new L.TileLayer(cloudmadeUrl, {maxZoom: 18}),\n\tmap = new L.Map('map', {layers: [cloudmade], center: new L.LatLng(-37.7772, 175.2756), zoom: 15 });\n\nvar editableLayers = new L.FeatureGroup();\nmap.addLayer(editableLayers);\n\nvar MyCustomMarker = L.Icon.extend({\n\toptions: {\n\t\tshadowUrl: null,\n\t\ticonAnchor: new L.Point(12, 12),\n\t\ticonSize: new L.Point(24, 24),\n\t\ticonUrl: 'link/to/image.png'\n\t}\n});\n\nvar options = {\n\tposition: 'topright',\n\tdraw: {\n\t\tpolyline: {\n\t\t\tshapeOptions: {\n\t\t\t\tcolor: '#f357a1',\n\t\t\t\tweight: 10\n\t\t\t}\n\t\t},\n\t\tpolygon: {\n\t\t\tallowIntersection: false, // Restricts shapes to simple polygons\n\t\t\tdrawError: {\n\t\t\t\tcolor: '#e1e100', // Color the shape will turn when intersects\n\t\t\t\tmessage: '<strong>Oh snap!<strong> you can\\'t draw that!' // Message that will show when intersect\n\t\t\t},\n\t\t\tshapeOptions: {\n\t\t\t\tcolor: '#bada55'\n\t\t\t}\n\t\t},\n\t\tcircle: false, // Turns off this drawing tool\n\t\trectangle: {\n\t\t\tshapeOptions: {\n\t\t\t\tclickable: false\n\t\t\t}\n\t\t},\n\t\tmarker: {\n\t\t\ticon: new MyCustomMarker()\n\t\t}\n\t},\n\tedit: {\n\t\tfeatureGroup: editableLayers, //REQUIRED!!\n\t\tremove: false\n\t}\n};\n\nvar drawControl = new L.Control.Draw(options);\nmap.addControl(drawControl);\n\nmap.on('draw:created', function (e) {\n\tvar type = e.layerType,\n\t\tlayer = e.layer;\n\n\tif (type === 'marker') {\n\t\tlayer.bindPopup('A popup!');\n\t}\n\n\teditableLayers.addLayer(layer);\n});\n````\n\n### Disabling a toolbar\n\nIf you do not want a particular toolbar in your app you can turn it off by setting the toolbar to false.\n\n````js\nvar drawControl = new L.Control.Draw({\n\tdraw: false,\n\tedit: {\n\t\tfeatureGroup: editableLayers\n\t}\n});\n````\n\n### Disabling a toolbar item\n\nIf you want to turn off a particular toolbar item, set it to false. The following disables drawing polygons and markers. It also turns off the ability to edit layers.\n\n````js\nvar drawControl = new L.Control.Draw({\n\tdraw: {\n\t\tpolygon: false,\n\t\tmarker: false\n\t},\n\tedit: {\n\t\tfeatureGroup: editableLayers,\n\t\tedit: false\n\t}\n});\n````\n\n### Changing a drawing handlers options\n\nYou can change a draw handlers options after initialisation by using the `setDrawingOptions` method on the Leaflet.draw control.\n\nE.g. to change the colour of the rectangle:\n\n````js\ndrawControl.setDrawingOptions({\n    rectangle: {\n    \tshapeOptions: {\n        \tcolor: '#0000FF'\n        }\n    }\n});\n````\n\n### Creating a custom build\n\nIf you only require certain handlers (and not the UI), you may wish to create a custom build. You can generate the relevant jake command using the [build html file](https://github.com/Leaflet/Leaflet.draw/blob/master/build/build.html).\n\nSee [edit handlers example](https://github.com/Leaflet/Leaflet.draw/blob/master/examples/edithandlers.html) which uses only the edit handlers.\n\n<a name=\"thanks\" />\n\n### Testing\n\nTo test you can install the npm dependencies:\n\n    npm install\n\nand then use:\n\n    jake test\n\n## Thanks\n\nTouch friendly version of Leaflet.draw was created and maintained by Michael Guild (https://github.com/michaelguild13).\n\nThe touch support was initiated due to a demand for it at National Geographic for their Map Maker Projected (http://mapmaker.education.nationalgeographic.com/) that was created by Michael Guild and Daniel Schep (https://github.com/dschep)\n\nThanks so much to [@brunob](https://github.com/brunob), [@tnightingale](https://github.com/tnightingale), and [@shramov](https://github.com/shramov). I got a lot of ideas from their Leaflet plugins.\n\nAll the [contributors](https://github.com/Leaflet/Leaflet.draw/graphs/contributors) and issue reporters of this plugin rock. Thanks for tidying up my mess and keeping the plugin on track.\n\nThe icons used for some of the toolbar buttons are either from http://glyphicons.com/ or inspired by them. <3 Glyphicons!\n\nFinally, [@mourner](https://github.com/mourner) is the man! Thanks for dedicating so much of your time to create the gosh darn best JavaScript mapping library around."
  },
  "leaflet-draw@0.4.12": {
    "licenses": "MIT",
    "repository": "https://github.com/Leaflet/Leaflet.draw",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/leaflet-draw",
    "licenseFile": "node_modules/leaflet-draw/README.md",
    "licenseText": "[![GitHub version](https://badge.fury.io/gh/Leaflet%2Fleaflet.draw.svg)](https://badge.fury.io/gh/Leaflet%2Fleaflet.draw)\n[![npm version](https://badge.fury.io/js/leaflet-draw.svg)](https://badge.fury.io/js/leaflet-draw)\n[![NPM Downloads](https://img.shields.io/npm/dt/leaflet-draw.svg)](https://www.npmjs.com/package/leaflet-draw)\n[![Bower version](https://badge.fury.io/bo/leaflet.draw.svg)](https://badge.fury.io/bo/leaflet.draw)\n[![Build Status](https://travis-ci.org/Leaflet/Leaflet.draw.svg?branch=master)](https://travis-ci.org/Leaflet/Leaflet.draw)\n[![Leaflet.draw Chat](https://badges.gitter.im/Leaflet/Leaflet.draw.svg)](https://gitter.im/Leaflet/Leaflet.draw?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![GitHub issues](https://img.shields.io/github/issues/Leaflet/Leaflet.draw.svg)](https://github.com/Leaflet/Leaflet.draw/issues)\n[![GitHub forks](https://img.shields.io/github/forks/Leaflet/Leaflet.draw.svg)](https://github.com/Leaflet/Leaflet.draw/network)\n[![GitHub stars](https://img.shields.io/github/stars/Leaflet/Leaflet.draw.svg)](https://github.com/Leaflet/Leaflet.draw/stargazers)\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/Leaflet/Leaflet.draw/master/MIT-LICENSE.md)\n\n# Leaflet.draw\nAdds support for drawing and editing vectors and markers on [Leaflet maps](https://github.com/Leaflet/Leaflet).\n\nSupports [Leaflet](https://github.com/Leaflet/Leaflet/releases) 0.7.x and 1.0.0+ branches.\n\nPlease check out our [Api Documentation](https://leaflet.github.io/Leaflet.draw/docs/leaflet-draw-latest.html)\n\n#### Upgrading from Leaflet.draw 0.1\n\nLeaflet.draw 0.2.0 changes a LOT of things from 0.1. Please see [BREAKING CHANGES](https://github.com/Leaflet/Leaflet.draw/blob/master/BREAKINGCHANGES.md) for how to upgrade.\n\n## In this readme\n\n- [Customizing Language](#customlanguage)\n- [Common tasks](#commontasks)\n- [Contributing](#contributing)\n- [Thanks](#thanks)\n\n## Customizing language and text in Leaflet.draw\n\nLeaflet.draw uses the `L.drawLocal` configuration object to set any text used in the plugin. Customizing this will allow support for changing the text or supporting another language.\n\nSee [Leaflet.draw.js](https://github.com/Leaflet/Leaflet.draw/blob/master/src/Leaflet.draw.js) for the default strings.\n\nE.g.\n\n```js\n    // Set the button title text for the polygon button\n    L.drawLocal.draw.toolbar.buttons.polygon = 'Draw a sexy polygon!';\n    \n    // Set the tooltip start text for the rectangle\n    L.drawLocal.draw.handlers.rectangle.tooltip.start = 'Not telling...';\n```\n\n## Common tasks\n\nThe following examples outline some common tasks.\n\n### Example Leaflet.draw config\n\nThe following example will show you how to:\n\n1. Change the position of the control's toolbar.\n2. Customize the styles of a vector layer.\n3. Use a custom marker.\n4. Disable the delete functionality.\n\n```js\n    var cloudmadeUrl = 'http://{s}.tile.cloudmade.com/BC9A493B41014CAABB98F0471D759707/997/256/{z}/{x}/{y}.png',\n        cloudmade = new L.TileLayer(cloudmadeUrl, {maxZoom: 18}),\n        map = new L.Map('map', {layers: [cloudmade], center: new L.LatLng(-37.7772, 175.2756), zoom: 15 });\n    \n    var editableLayers = new L.FeatureGroup();\n    map.addLayer(editableLayers);\n    \n    var MyCustomMarker = L.Icon.extend({\n        options: {\n            shadowUrl: null,\n            iconAnchor: new L.Point(12, 12),\n            iconSize: new L.Point(24, 24),\n            iconUrl: 'link/to/image.png'\n        }\n    });\n    \n    var options = {\n        position: 'topright',\n        draw: {\n            polyline: {\n                shapeOptions: {\n                    color: '#f357a1',\n                    weight: 10\n                }\n            },\n            polygon: {\n                allowIntersection: false, // Restricts shapes to simple polygons\n                drawError: {\n                    color: '#e1e100', // Color the shape will turn when intersects\n                    message: '<strong>Oh snap!<strong> you can\\'t draw that!' // Message that will show when intersect\n                },\n                shapeOptions: {\n                    color: '#bada55'\n                }\n            },\n            circle: false, // Turns off this drawing tool\n            rectangle: {\n                shapeOptions: {\n                    clickable: false\n                }\n            },\n            marker: {\n                icon: new MyCustomMarker()\n            }\n        },\n        edit: {\n            featureGroup: editableLayers, //REQUIRED!!\n            remove: false\n        }\n    };\n    \n    var drawControl = new L.Control.Draw(options);\n    map.addControl(drawControl);\n    \n    map.on(L.Draw.Event.CREATED, function (e) {\n        var type = e.layerType,\n            layer = e.layer;\n    \n        if (type === 'marker') {\n            layer.bindPopup('A popup!');\n        }\n    \n        editableLayers.addLayer(layer);\n    });\n```\n\n### Changing a drawing handlers options\n\nYou can change a draw handlers options after initialisation by using the `setDrawingOptions` method on the Leaflet.draw control.\n\nE.g. to change the colour of the rectangle:\n\n```js\ndrawControl.setDrawingOptions({\n    rectangle: {\n    \tshapeOptions: {\n        \tcolor: '#0000FF'\n        }\n    }\n});\n```\n\n# Contributing\n \n## Testing\n\nTo test you can install the npm dependencies:\n\n    npm install\n\nand then use:\n\n    jake test\n\n## Documentation\n\nDocumentation is build with Leafdoc, to generate the documentation use\n\n    jake docs\n\nand the generated html documentation is saved to `./docs/leaflet-draw-latest.html`\n\n## Thanks\n\nTouch friendly version of Leaflet.draw was created by Michael Guild (https://github.com/michaelguild13).\n\nThe touch support was initiated due to a demand for it at National Geographic for their Map Maker Projected (http://mapmaker.education.nationalgeographic.com/) that was created by Michael Guild and Daniel Schep (https://github.com/dschep)\n\nThanks so much to [@brunob](https://github.com/brunob), [@tnightingale](https://github.com/tnightingale), and [@shramov](https://github.com/shramov). I got a lot of ideas from their Leaflet plugins.\n\nAll the [contributors](https://github.com/Leaflet/Leaflet.draw/graphs/contributors) and issue reporters of this plugin rock. Thanks for tidying up my mess and keeping the plugin on track.\n\nThe icons used for some of the toolbar buttons are either from http://glyphicons.com/ or inspired by them. <3 Glyphicons!\n\nFinally, [@mourner](https://github.com/mourner) is the man! Thanks for dedicating so much of your time to create the gosh darn best JavaScript mapping library around."
  },
  "leaflet-geometryutil@0.8.0": {
    "licenses": "BSD-3-Clause",
    "repository": "https://github.com/makinacorpus/Leaflet.GeometryUtil",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/leaflet-geometryutil",
    "licenseFile": "node_modules/leaflet-geometryutil/LICENSE",
    "licenseText": "Copyright (c) 2013, Makina Corpus\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n    * Neither the name of ODE nor the names of its contributors\n      may be used to endorse or promote products derived from this software\n      without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  "leaflet-map-builder@0.1.1": {
    "licenses": "MIT",
    "repository": "https://github.com/gherardovarando/leaflet-map-builder",
    "publisher": "Gherardo Varando",
    "email": "gherardo.varando@gmail.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/leaflet-map-builder",
    "licenseFile": "node_modules/leaflet-map-builder/LICENSE",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Gherardo Varando (gherardo.varando@gmail.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "leaflet-multilevel@0.0.1": {
    "licenses": "MIT",
    "repository": "https://github.com/gherardovarando/leaflet-multilevel",
    "publisher": "gherardo varando",
    "email": "gherardo.varando@gmail.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/leaflet-multilevel",
    "licenseFile": "node_modules/leaflet-multilevel/LICENSE",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Gherardo Varando (gherardo.varando@gmail.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "leaflet-snap@0.0.4": {
    "licenses": "MIT",
    "repository": "https://github.com/makinacorpus/Leaflet.Snap",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/leaflet-snap",
    "licenseFile": "node_modules/leaflet-snap/LICENSE",
    "licenseText": "MIT License\n\nCopyright (c) 2013 Makina Corpus\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "leaflet.markercluster@1.1.0": {
    "licenses": "MIT",
    "repository": "https://github.com/Leaflet/Leaflet.markercluster",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/leaflet.markercluster",
    "licenseFile": "node_modules/leaflet.markercluster/README.md",
    "licenseText": "Leaflet.markercluster\r\n=====================\r\n\r\nProvides Beautiful Animated Marker Clustering functionality for [Leaflet](http://leafletjs.com), a JS library for interactive maps.\r\n\r\n*Requires Leaflet 1.0.0*\r\n\r\n![cluster map example](example/map.png)\r\n\r\nFor a Leaflet 0.7 compatible version, [use the leaflet-0.7 branch](https://github.com/Leaflet/Leaflet.markercluster/tree/leaflet-0.7)<br>\r\nFor a Leaflet 0.5 compatible version, [Download b128e950](https://github.com/Leaflet/Leaflet.markercluster/archive/b128e950d8f5d7da5b60bd0aa9a88f6d3dd17c98.zip)<br>\r\nFor a Leaflet 0.4 compatible version, [Download the 0.2 release](https://github.com/Leaflet/Leaflet.markercluster/archive/0.2.zip)\r\n\r\n<!---\r\nTOC created with gh-md-toc\r\nhttps://github.com/ekalinin/github-markdown-toc\r\nremoved link to h1 and indented back 2 spaces all links.\r\n-->\r\n## Table of Contents\r\n  * [Using the plugin](#using-the-plugin)\r\n    * [Building, testing and linting scripts](#building-testing-and-linting-scripts)\r\n    * [Examples](#examples)\r\n    * [Usage](#usage)\r\n  * [Options](#options)\r\n    * [Defaults](#defaults)\r\n    * [Customising the Clustered Markers](#customising-the-clustered-markers)\r\n    * [All Options](#all-options)\r\n      * [Enabled by default (boolean options)](#enabled-by-default-boolean-options)\r\n      * [Other options](#other-options)\r\n      * [Chunked addLayers options](#chunked-addlayers-options)\r\n  * [Events](#events)\r\n    * [Additional MarkerClusterGroup Events](#additional-markerclustergroup-events)\r\n  * [Methods](#methods)\r\n    * [Group methods](#group-methods)\r\n      * [Adding and removing Markers](#adding-and-removing-markers)\r\n      * [Bulk adding and removing Markers](#bulk-adding-and-removing-markers)\r\n      * [Getting the visible parent of a marker](#getting-the-visible-parent-of-a-marker)\r\n      * [Refreshing the clusters icon](#refreshing-the-clusters-icon)\r\n      * [Other Group Methods](#other-group-methods)\r\n    * [Clusters methods](#clusters-methods)\r\n      * [Getting the bounds of a cluster](#getting-the-bounds-of-a-cluster)\r\n      * [Zooming to the bounds of a cluster](#zooming-to-the-bounds-of-a-cluster)\r\n      * [Other clusters methods](#other-clusters-methods)\r\n  * [Handling LOTS of markers](#handling-lots-of-markers)\r\n  * [License](#license)\r\n  * [Sub-plugins](#sub-plugins)\r\n\r\n\r\n## Using the plugin\r\nInclude the plugin CSS and JS files on your page after Leaflet files, using your method of choice:\r\n* [Download the `v1.1.0` release](https://github.com/Leaflet/Leaflet.markercluster/archive/v1.1.0.zip)\r\n* Use unpkg CDN: `https://unpkg.com/leaflet.markercluster@1.1.0/dist/`\r\n* Install with npm: `npm install leaflet.markercluster`\r\n\r\nIn each case, use files in the `dist` folder:\r\n* `MarkerCluster.css`\r\n* `MarkerCluster.Default.css` (not needed if you use your own `iconCreateFunction` instead of the default one)\r\n* `leaflet.markercluster.js` (or `leaflet.markercluster-src.js` for the non-minified version)\r\n\r\n### Building, testing and linting scripts\r\nInstall jake `npm install -g jake` then run `npm install`\r\n* To check the code for errors and build Leaflet from source, run `jake`.\r\n* To run the tests, run `jake test`.\r\n\r\n### Examples\r\nSee the included examples for usage.\r\n\r\nThe [realworld example](https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-realworld.388.html) is a good place to start, it uses all of the defaults of the clusterer.\r\nOr check out the [custom example](https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-custom.html) for how to customise the behaviour and appearance of the clusterer\r\n\r\n### Usage\r\nCreate a new MarkerClusterGroup, add your markers to it, then add it to the map\r\n\r\n```javascript\r\nvar markers = L.markerClusterGroup();\r\nmarkers.addLayer(L.marker(getRandomLatLng(map)));\r\n... Add more layers ...\r\nmap.addLayer(markers);\r\n```\r\n\r\n## Options\r\n### Defaults\r\nBy default the Clusterer enables some nice defaults for you:\r\n* **showCoverageOnHover**: When you mouse over a cluster it shows the bounds of its markers.\r\n* **zoomToBoundsOnClick**: When you click a cluster we zoom to its bounds.\r\n* **spiderfyOnMaxZoom**: When you click a cluster at the bottom zoom level we spiderfy it so you can see all of its markers. (*Note: the spiderfy occurs at the current zoom level if all items within the cluster are still clustered at the maximum zoom level or at zoom specified by `disableClusteringAtZoom` option*)\r\n* **removeOutsideVisibleBounds**: Clusters and markers too far from the viewport are removed from the map for performance.\r\n* **spiderLegPolylineOptions**: Allows you to specify [PolylineOptions](http://leafletjs.com/reference.html#polyline-options) to style spider legs. By default, they are `{ weight: 1.5, color: '#222', opacity: 0.5 }`.\r\n\r\nYou can disable any of these as you want in the options when you create the MarkerClusterGroup:\r\n```javascript\r\nvar markers = L.markerClusterGroup({\r\n\tspiderfyOnMaxZoom: false,\r\n\tshowCoverageOnHover: false,\r\n\tzoomToBoundsOnClick: false\r\n});\r\n```\r\n\r\n### Customising the Clustered Markers\r\nAs an option to MarkerClusterGroup you can provide your own function for creating the Icon for the clustered markers.\r\nThe default implementation changes color at bounds of 10 and 100, but more advanced uses may require customising this.\r\nYou do not need to include the .Default css if you go this way.\r\nYou are passed a MarkerCluster object, you'll probably want to use `getChildCount()` or `getAllChildMarkers()` to work out the icon to show.\r\n\r\n```javascript\r\nvar markers = L.markerClusterGroup({\r\n\ticonCreateFunction: function(cluster) {\r\n\t\treturn L.divIcon({ html: '<b>' + cluster.getChildCount() + '</b>' });\r\n\t}\r\n});\r\n```\r\nCheck out the [custom example](https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-custom.html) for an example of this.\r\n\r\nIf you need to update the clusters icon (e.g. they are based on markers real-time data), use the method [refreshClusters()](#refreshing-the-clusters-icon).\r\n\r\n### All Options\r\n#### Enabled by default (boolean options)\r\n* **showCoverageOnHover**: When you mouse over a cluster it shows the bounds of its markers.\r\n* **zoomToBoundsOnClick**: When you click a cluster we zoom to its bounds.\r\n* **spiderfyOnMaxZoom**: When you click a cluster at the bottom zoom level we spiderfy it so you can see all of its markers. (*Note: the spiderfy occurs at the current zoom level if all items within the cluster are still clustered at the maximum zoom level or at zoom specified by `disableClusteringAtZoom` option*).\r\n* **removeOutsideVisibleBounds**: Clusters and markers too far from the viewport are removed from the map for performance.\r\n* **animate**: Smoothly split / merge cluster children when zooming and spiderfying. If `L.DomUtil.TRANSITION` is false, this option has no effect (no animation is possible).\r\n\r\n#### Other options\r\n* **animateAddingMarkers**: If set to true (and `animate` option is also true) then adding individual markers to the MarkerClusterGroup after it has been added to the map will add the marker and animate it into the cluster. Defaults to false as this gives better performance when bulk adding markers. addLayers does not support this, only addLayer with individual Markers.\r\n* **disableClusteringAtZoom**: If set, at this zoom level and below, markers will not be clustered. This defaults to disabled. [See Example](https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-realworld-maxzoom.388.html). Note: you may be interested in disabling `spiderfyOnMaxZoom` option when using `disableClusteringAtZoom`.\r\n* **maxClusterRadius**: The maximum radius that a cluster will cover from the central marker (in pixels). Default 80. Decreasing will make more, smaller clusters. You can also use a function that accepts the current map zoom and returns the maximum cluster radius in pixels.\r\n* **polygonOptions**: Options to pass when creating the L.Polygon(points, options) to show the bounds of a cluster. Defaults to empty, which lets Leaflet use the [default Path options](http://leafletjs.com/reference.html#path-options).\r\n* **singleMarkerMode**: If set to true, overrides the icon for all added markers to make them appear as a 1 size cluster. Note: the markers are not replaced by cluster objects, only their icon is replaced. Hence they still react to normal events, and option `disableClusteringAtZoom` does not restore their previous icon (see [#391](https://github.com/Leaflet/Leaflet.markercluster/issues/391)).\r\n* **spiderLegPolylineOptions**: Allows you to specify [PolylineOptions](http://leafletjs.com/reference.html#polyline-options) to style spider legs. By default, they are `{ weight: 1.5, color: '#222', opacity: 0.5 }`.\r\n* **spiderfyDistanceMultiplier**: Increase from 1 to increase the distance away from the center that spiderfied markers are placed. Use if you are using big marker icons (Default: 1).\r\n* **iconCreateFunction**: Function used to create the cluster icon. See [the default implementation](https://github.com/Leaflet/Leaflet.markercluster/blob/15ed12654acdc54a4521789c498e4603fe4bf781/src/MarkerClusterGroup.js#L542) or the [custom example](https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-custom.html).\r\n* **clusterPane**: Map pane where the cluster icons will be added. Defaults to L.Marker's default (currently 'markerPane'). [See the pane example](https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-pane.html).\r\n\r\n#### Chunked addLayers options\r\nOptions for the [addLayers](#bulk-adding-and-removing-markers) method. See [#357](https://github.com/Leaflet/Leaflet.markercluster/issues/357) for explanation on how the chunking works.\r\n* **chunkedLoading**: Boolean to split the addLayer**s** processing in to small intervals so that the page does not freeze.\r\n* **chunkInterval**: Time interval (in ms) during which addLayers works before pausing to let the rest of the page process. In particular, this prevents the page from freezing while adding a lot of markers. Defaults to 200ms.\r\n* **chunkDelay**: Time delay (in ms) between consecutive periods of processing for addLayers. Default to 50ms.\r\n* **chunkProgress**: Callback function that is called at the end of each chunkInterval. Typically used to implement a progress indicator, e.g. [code in RealWorld 50k](https://github.com/Leaflet/Leaflet.markercluster/blob/master/example/marker-clustering-realworld.50000.html#L33-L49). Defaults to null. Arguments:\r\n  1. Number of processed markers\r\n  2. Total number of markers being added\r\n  3. Elapsed time (in ms)\r\n\r\n## Events\r\nLeaflet events like `click`, `mouseover`, etc. are just related to _Markers_ in the cluster.\r\nTo receive events for clusters, listen to `'cluster' + '<eventName>'`, ex: `clusterclick`, `clustermouseover`, `clustermouseout`.\r\n\r\nSet your callback up as follows to handle both cases:\r\n\r\n```javascript\r\nmarkers.on('click', function (a) {\r\n\tconsole.log('marker ' + a.layer);\r\n});\r\n\r\nmarkers.on('clusterclick', function (a) {\r\n\t// a.layer is actually a cluster\r\n\tconsole.log('cluster ' + a.layer.getAllChildMarkers().length);\r\n});\r\n```\r\n\r\n### Additional MarkerClusterGroup Events\r\n\r\n- **animationend**: Fires when marker clustering/unclustering animation has completed\r\n- **spiderfied**: Fires when overlapping markers get spiderified (Contains ```cluster``` and ```markers``` attributes)\r\n- **unspiderfied**: Fires when overlapping markers get unspiderified (Contains ```cluster``` and ```markers``` attributes)\r\n\r\n## Methods\r\n\r\n### Group methods\r\n\r\n#### Adding and removing Markers\r\n`addLayer`, `removeLayer` and `clearLayers` are supported and they should work for most uses.\r\n\r\n#### Bulk adding and removing Markers\r\n`addLayers` and `removeLayers` are bulk methods for adding and removing markers and should be favoured over the single versions when doing bulk addition/removal of markers. Each takes an array of markers. You can use [dedicated options](#chunked-addlayers-options) to fine-tune the behaviour of `addLayers`.\r\n\r\nThese methods extract non-group layer children from Layer Group types, even deeply nested. _However_, be noted that:\r\n- `chunkProgress` jumps backward when `addLayers` finds a group (since appending its children to the input array makes the total increase).\r\n- Groups are not actually added into the MarkerClusterGroup, only their non-group child layers. Therfore, `hasLayer` method will return `true` for non-group child layers, but `false` on any (possibly parent) Layer Group types.\r\n\r\nIf you are removing a lot of markers it will almost definitely be better to call `clearLayers` then call `addLayers` to add the markers you don't want to remove back in. See [#59](https://github.com/Leaflet/Leaflet.markercluster/issues/59#issuecomment-9320628) for details.\r\n\r\n#### Getting the visible parent of a marker\r\nIf you have a marker in your MarkerClusterGroup and you want to get the visible parent of it (Either itself or a cluster it is contained in that is currently visible on the map).\r\nThis will return null if the marker and its parent clusters are not visible currently (they are not near the visible viewpoint)\r\n```javascript\r\nvar visibleOne = markerClusterGroup.getVisibleParent(myMarker);\r\nconsole.log(visibleOne.getLatLng());\r\n```\r\n\r\n#### Refreshing the clusters icon\r\nIf you have [customized](#customising-the-clustered-markers) the clusters icon to use some data from the contained markers, and later that data changes, use this method to force a refresh of the cluster icons.\r\nYou can use the method:\r\n- without arguments to force all cluster icons in the Marker Cluster Group to be re-drawn.\r\n- with an array or a mapping of markers to force only their parent clusters to be re-drawn.\r\n- with an L.LayerGroup. The method will look for all markers in it. Make sure it contains only markers which are also within this Marker Cluster Group.\r\n- with a single marker.\r\n```javascript\r\nmarkers.refreshClusters();\r\nmarkers.refreshClusters([myMarker0, myMarker33]);\r\nmarkers.refreshClusters({id_0: myMarker0, id_any: myMarker33});\r\nmarkers.refreshClusters(myLayerGroup);\r\nmarkers.refreshClusters(myMarker);\r\n```\r\n\r\nThe plugin also adds a method on L.Marker to easily update the underlying icon options and refresh the icon.\r\nIf passing a second argument that evaluates to `true`, the method will also trigger a `refreshCluster` on the parent MarkerClusterGroup for that single marker.\r\n```javascript\r\n// Use as many times as required to update markers,\r\n// then call refreshClusters once finished.\r\nfor (i in markersSubArray) {\r\n\tmarkersSubArray[i].refreshIconOptions(newOptionsMappingArray[i]);\r\n}\r\nmarkers.refreshClusters(markersSubArray);\r\n\r\n// If updating only one marker, pass true to\r\n// refresh this marker's parent clusters right away.\r\nmyMarker.refreshIconOptions(optionsMap, true); \r\n```\r\n\r\n#### Other Group Methods\r\n* **hasLayer**(layer): Returns true if the given layer (marker) is in the MarkerClusterGroup.\r\n* **zoomToShowLayer**(layer, callback): Zooms to show the given marker (spiderfying if required), calls the callback when the marker is visible on the map.\r\n\r\n### Clusters methods\r\nThe following methods can be used with clusters (not the group). They are typically used for event handling.\r\n\r\n#### Getting the bounds of a cluster\r\nWhen you receive an event from a cluster you can query it for the bounds.\r\n```javascript\r\nmarkers.on('clusterclick', function (a) {\r\n\tvar latLngBounds = a.layer.getBounds();\r\n});\r\n```\r\n\r\nYou can also query for the bounding convex polygon.\r\nSee [example/marker-clustering-convexhull.html](https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-convexhull.html) for a working example.\r\n```javascript\r\nmarkers.on('clusterclick', function (a) {\r\n\tmap.addLayer(L.polygon(a.layer.getConvexHull()));\r\n});\r\n```\r\n\r\n#### Zooming to the bounds of a cluster\r\nWhen you receive an event from a cluster you can zoom to its bounds in one easy step.\r\nIf all of the markers will appear at a higher zoom level, that zoom level is zoomed to instead.\r\n`zoomToBounds` takes an optional argument to pass [options to the resulting `fitBounds` call](http://leafletjs.com/reference.html#map-fitboundsoptions).\r\n\r\nSee [marker-clustering-zoomtobounds.html](https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-zoomtobounds.html) for a working example.\r\n```javascript\r\nmarkers.on('clusterclick', function (a) {\r\n\ta.layer.zoomToBounds({padding: [20, 20]});\r\n});\r\n```\r\n\r\n#### Other clusters methods\r\n* **getChildCount**: Returns the total number of markers contained within that cluster.\r\n* **getAllChildMarkers**: Returns the array of total markers contained within that cluster.\r\n* **spiderfy**: Spiderfies the child markers of this cluster\r\n* **unspiderfy**: Unspiderfies a cluster (opposite of spiderfy)\r\n\r\n## Handling LOTS of markers\r\nThe Clusterer can handle 10,000 or even 50,000 markers (in chrome). IE9 has some issues with 50,000.\r\n- [realworld 10,000 example](https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-realworld.10000.html)\r\n- [realworld 50,000 example](https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-realworld.50000.html)\r\n\r\nNote: these two examples use the `chunkedLoading` option set to true in order to avoid locking the browser for a long time.\r\n\r\n## License\r\n\r\nLeaflet.markercluster is free software, and may be redistributed under the MIT-LICENSE.\r\n\r\n[![Build Status](https://travis-ci.org/Leaflet/Leaflet.markercluster.png?branch=master)](https://travis-ci.org/Leaflet/Leaflet.markercluster)\r\n\r\n## Sub-plugins\r\nLeaflet.markercluster plugin is very popular and as such it generates high and\r\ndiverse expectations for increased functionalities.\r\n\r\nIf you are in that case, be sure to have a look first at the repository\r\n[issues](https://github.com/Leaflet/Leaflet.markercluster/issues) in case what\r\nyou are looking for would already be discussed, and some workarounds would be proposed.\r\n\r\nCheck also the below sub-plugins:\r\n\r\n| Plugin | Description | Maintainer |\r\n| :----- | :---------- | :--------- |\r\n| [Leaflet.FeatureGroup.SubGroup](https://github.com/ghybs/Leaflet.FeatureGroup.SubGroup) | Creates a Feature Group that adds its child layers into a parent group when added to a map (e.g. through L.Control.Layers). Typical usage is to dynamically add/remove groups of markers from Marker Cluster. | [ghybs](https://github.com/ghybs) |\r\n| [Leaflet.MarkerCluster.LayerSupport](https://github.com/ghybs/Leaflet.MarkerCluster.LayerSupport) | Brings compatibility with L.Control.Layers and other Leaflet plugins. I.e. everything that uses direct calls to map.addLayer and map.removeLayer. | [ghybs](https://github.com/ghybs) |\r\n| [Leaflet.MarkerCluster.Freezable](https://github.com/ghybs/Leaflet.MarkerCluster.Freezable) | Adds the ability to freeze clusters at a specified zoom. E.g. freezing at maxZoom + 1 makes as if clustering was programmatically disabled. | [ghybs](https://github.com/ghybs) |\r\n| [Leaflet.MarkerCluster.PlacementStrategies](https://github.com/adammertel/Leaflet.MarkerCluster.PlacementStrategies) | Implements new strategies to position clustered markers (eg: clock, concentric circles, ...). Recommended to use with circleMarkers. [Demo](https://adammertel.github.io/Leaflet.MarkerCluster.PlacementStrategies/demo/demo1.html) | [adammertel](https://github.com/adammertel) / [UNIVIE](http://carto.univie.ac.at/) |"
  },
  "leaflet@0.7.7": {
    "licenses": "BSD*",
    "repository": "https://github.com/Leaflet/Leaflet",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/leaflet-snap/node_modules/leaflet",
    "licenseFile": "node_modules/leaflet-snap/node_modules/leaflet/LICENSE",
    "licenseText": "Copyright (c) 2010-2013, Vladimir Agafonkin\r\nCopyright (c) 2010-2011, CloudMade\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are\r\npermitted provided that the following conditions are met:\r\n\r\n   1. Redistributions of source code must retain the above copyright notice, this list of\r\n      conditions and the following disclaimer.\r\n\r\n   2. Redistributions in binary form must reproduce the above copyright notice, this list\r\n      of conditions and the following disclaimer in the documentation and/or other materials\r\n      provided with the distribution.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\r\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\nCOPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\r\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\r\nTORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  "leaflet@1.0.3": {
    "licenses": "BSD-2-Clause",
    "repository": "https://github.com/Leaflet/Leaflet",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/leaflet-map-builder/node_modules/leaflet",
    "licenseFile": "node_modules/leaflet-map-builder/node_modules/leaflet/LICENSE",
    "licenseText": "Copyright (c) 2010-2016, Vladimir Agafonkin\r\nCopyright (c) 2010-2011, CloudMade\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are\r\npermitted provided that the following conditions are met:\r\n\r\n   1. Redistributions of source code must retain the above copyright notice, this list of\r\n      conditions and the following disclaimer.\r\n\r\n   2. Redistributions in binary form must reproduce the above copyright notice, this list\r\n      of conditions and the following disclaimer in the documentation and/or other materials\r\n      provided with the distribution.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\r\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\nCOPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\r\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\r\nTORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  "leaflet@1.2.0": {
    "licenses": "BSD-2-Clause",
    "repository": "https://github.com/Leaflet/Leaflet",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/leaflet",
    "licenseFile": "node_modules/leaflet/LICENSE",
    "licenseText": "Copyright (c) 2010-2016, Vladimir Agafonkin\r\nCopyright (c) 2010-2011, CloudMade\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are\r\npermitted provided that the following conditions are met:\r\n\r\n   1. Redistributions of source code must retain the above copyright notice, this list of\r\n      conditions and the following disclaimer.\r\n\r\n   2. Redistributions in binary form must reproduce the above copyright notice, this list\r\n      of conditions and the following disclaimer in the documentation and/or other materials\r\n      provided with the distribution.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\r\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\nCOPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\r\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\r\nTORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  "lodash.clonedeep@4.5.0": {
    "licenses": "MIT",
    "repository": "https://github.com/lodash/lodash",
    "publisher": "John-David Dalton",
    "email": "john.david.dalton@gmail.com",
    "url": "http://allyoucanleet.com/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/lodash.clonedeep",
    "licenseFile": "node_modules/lodash.clonedeep/LICENSE",
    "licenseText": "Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\nBased on Underscore.js, copyright Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors <http://underscorejs.org/>\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/lodash/lodash\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights for sample code are waived via CC0. Sample\ncode is defined as all source code displayed within the prose of the\ndocumentation.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nFiles located in the node_modules and vendor directories are externally\nmaintained libraries used by this software which have their own\nlicenses; we recommend you read them, as their terms may differ from the\nterms above."
  },
  "lodash.flatten@4.4.0": {
    "licenses": "MIT",
    "repository": "https://github.com/lodash/lodash",
    "publisher": "John-David Dalton",
    "email": "john.david.dalton@gmail.com",
    "url": "http://allyoucanleet.com/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/lodash.flatten",
    "licenseFile": "node_modules/lodash.flatten/LICENSE",
    "licenseText": "Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\nBased on Underscore.js, copyright Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors <http://underscorejs.org/>\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/lodash/lodash\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights for sample code are waived via CC0. Sample\ncode is defined as all source code displayed within the prose of the\ndocumentation.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nFiles located in the node_modules and vendor directories are externally\nmaintained libraries used by this software which have their own\nlicenses; we recommend you read them, as their terms may differ from the\nterms above."
  },
  "lodash.get@4.4.2": {
    "licenses": "MIT",
    "repository": "https://github.com/lodash/lodash",
    "publisher": "John-David Dalton",
    "email": "john.david.dalton@gmail.com",
    "url": "http://allyoucanleet.com/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/lodash.get",
    "licenseFile": "node_modules/lodash.get/LICENSE",
    "licenseText": "Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\nBased on Underscore.js, copyright Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors <http://underscorejs.org/>\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/lodash/lodash\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights for sample code are waived via CC0. Sample\ncode is defined as all source code displayed within the prose of the\ndocumentation.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nFiles located in the node_modules and vendor directories are externally\nmaintained libraries used by this software which have their own\nlicenses; we recommend you read them, as their terms may differ from the\nterms above."
  },
  "lodash.set@4.3.2": {
    "licenses": "MIT",
    "repository": "https://github.com/lodash/lodash",
    "publisher": "John-David Dalton",
    "email": "john.david.dalton@gmail.com",
    "url": "http://allyoucanleet.com/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/lodash.set",
    "licenseFile": "node_modules/lodash.set/LICENSE",
    "licenseText": "Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\nBased on Underscore.js, copyright Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors <http://underscorejs.org/>\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/lodash/lodash\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights for sample code are waived via CC0. Sample\ncode is defined as all source code displayed within the prose of the\ndocumentation.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nFiles located in the node_modules and vendor directories are externally\nmaintained libraries used by this software which have their own\nlicenses; we recommend you read them, as their terms may differ from the\nterms above."
  },
  "lodash.uniq@4.5.0": {
    "licenses": "MIT",
    "repository": "https://github.com/lodash/lodash",
    "publisher": "John-David Dalton",
    "email": "john.david.dalton@gmail.com",
    "url": "http://allyoucanleet.com/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/lodash.uniq",
    "licenseFile": "node_modules/lodash.uniq/LICENSE",
    "licenseText": "Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\nBased on Underscore.js, copyright Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors <http://underscorejs.org/>\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/lodash/lodash\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights for sample code are waived via CC0. Sample\ncode is defined as all source code displayed within the prose of the\ndocumentation.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nFiles located in the node_modules and vendor directories are externally\nmaintained libraries used by this software which have their own\nlicenses; we recommend you read them, as their terms may differ from the\nterms above."
  },
  "lodash@4.17.4": {
    "licenses": "MIT",
    "repository": "https://github.com/lodash/lodash",
    "publisher": "John-David Dalton",
    "email": "john.david.dalton@gmail.com",
    "url": "http://allyoucanleet.com/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/lodash",
    "licenseFile": "node_modules/lodash/LICENSE",
    "licenseText": "Copyright JS Foundation and other contributors <https://js.foundation/>\n\nBased on Underscore.js, copyright Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors <http://underscorejs.org/>\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/lodash/lodash\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights for sample code are waived via CC0. Sample\ncode is defined as all source code displayed within the prose of the\ndocumentation.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nFiles located in the node_modules and vendor directories are externally\nmaintained libraries used by this software which have their own\nlicenses; we recommend you read them, as their terms may differ from the\nterms above."
  },
  "mapextension@0.1.18": {
    "licenses": "MIT",
    "repository": "https://github.com/gherardovarando/mapextension",
    "publisher": "Gherardo Varando",
    "email": "gherardo.varando@gmail.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension",
    "licenseFile": "LICENSE",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Gherardo Varando (gherardo.varando@gmail.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "minimatch@3.0.4": {
    "licenses": "ISC",
    "repository": "https://github.com/isaacs/minimatch",
    "publisher": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/minimatch",
    "licenseFile": "node_modules/minimatch/LICENSE",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."
  },
  "minimist@0.0.8": {
    "licenses": "MIT",
    "repository": "https://github.com/substack/minimist",
    "publisher": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/minimist",
    "licenseFile": "node_modules/minimist/LICENSE",
    "licenseText": "This software is released under the MIT license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "mkdirp@0.5.1": {
    "licenses": "MIT",
    "repository": "https://github.com/substack/node-mkdirp",
    "publisher": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/mkdirp",
    "licenseFile": "node_modules/mkdirp/LICENSE",
    "licenseText": "Copyright 2010 James Halliday (mail@substack.net)\n\nThis project is free software released under the MIT/X11 license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "ms@2.0.0": {
    "licenses": "MIT",
    "repository": "https://github.com/zeit/ms",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/ms",
    "licenseFile": "node_modules/ms/license.md",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Zeit, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "once@1.4.0": {
    "licenses": "ISC",
    "repository": "https://github.com/isaacs/once",
    "publisher": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/once",
    "licenseFile": "node_modules/once/LICENSE",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."
  },
  "papaparse@4.3.6": {
    "licenses": "MIT",
    "repository": "https://github.com/mholt/PapaParse",
    "publisher": "Matthew Holt",
    "url": "https://twitter.com/mholt6",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/papaparse",
    "licenseFile": "node_modules/papaparse/LICENSE",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Matthew Holt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "path-is-absolute@1.0.1": {
    "licenses": "MIT",
    "repository": "https://github.com/sindresorhus/path-is-absolute",
    "publisher": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/path-is-absolute",
    "licenseFile": "node_modules/path-is-absolute/license",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "rimraf@2.6.2": {
    "licenses": "ISC",
    "repository": "https://github.com/isaacs/rimraf",
    "publisher": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/rimraf",
    "licenseFile": "node_modules/rimraf/LICENSE",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."
  },
  "rwlock@5.0.0": {
    "licenses": "MIT",
    "repository": "https://github.com/71104/rwlock",
    "publisher": "Alberto La Rocca",
    "email": "a71104@gmail.com",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/rwlock",
    "licenseFile": "node_modules/rwlock/LICENSE",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2013 Alberto La Rocca\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "tiff-to-png@1.0.5": {
    "licenses": "MIT",
    "repository": "https://github.com/RickCraig/node-tiff-to-png",
    "publisher": "Rick Craig",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/tiff-to-png",
    "licenseFile": "node_modules/tiff-to-png/LICENSE",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 RickCraig\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "w3c-blob@0.0.1": {
    "licenses": "MIT",
    "repository": "https://github.com/chrisdickinson/w3c-blob",
    "publisher": "Chris Dickinson",
    "email": "chris@neversaw.us",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/w3c-blob",
    "licenseFile": "node_modules/w3c-blob/README.md",
    "licenseText": "# w3c-blob\n\nexport a node or browserify compatible w3c blob interface.\npolyfills old versions that rely on `BlobBuilder`.\n\n```javascript\nvar Blob = require('w3c-blob')\n\nvar blob = new Blob([parts], {type: 'text/plain'})\n```\n\n## api\n\n[See MDN's Blob documentation](https://developer.mozilla.org/en-US/docs/DOM/Blob).\n\n# license\n\nMIT"
  },
  "wrappy@1.0.2": {
    "licenses": "ISC",
    "repository": "https://github.com/npm/wrappy",
    "publisher": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/",
    "errno": -2,
    "code": "ENOENT",
    "syscall": "open",
    "path": "/home/gherardo/MapExtension/node_modules/wrappy",
    "licenseFile": "node_modules/wrappy/LICENSE",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."
  }
}
